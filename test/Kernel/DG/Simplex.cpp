//////////////////////////////////////////////////////////////////////////
// This file is part of openPSTD.                                       //
//                                                                      //
// openPSTD is free software: you can redistribute it and/or modify     //
// it under the terms of the GNU General Public License as published by //
// the Free Software Foundation, either version 3 of the License, or    //
// (at your option) any later version.                                  //
//                                                                      //
// openPSTD is distributed in the hope that it will be useful,          //
// but WITHOUT ANY WARRANTY; without even the implied warranty of       //
// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the        //
// GNU General Public License for more details.                         //
//                                                                      //
// You should have received a copy of the GNU General Public License    //
// along with openPSTD.  If not, see <http://www.gnu.org/licenses/>.    //
//                                                                      //
//////////////////////////////////////////////////////////////////////////

//////////////////////////////////////////////////////////////////////////
//
// Date: 7-11-2016
//
//
// Authors: M. R. Fortuin
//
//
// Purpose:
//
//
//////////////////////////////////////////////////////////////////////////

#include "Macros.h"

#include <boost/test/unit_test.hpp>
#include <kernel/DG/Simplex.h>
#include <iostream>

using namespace OpenPSTD::Kernel::DG;
using namespace std;
using namespace Eigen;

BOOST_AUTO_TEST_SUITE(DG)
    BOOST_AUTO_TEST_SUITE(Simplex_tests)
        BOOST_AUTO_TEST_CASE(Simplex_1)
        {
            int i = 0;
            int j = 0;
            VectorX<double> a(66);
            VectorX<double> b(66);
            VectorX<double> expectedP(66);

            a << -1,-0.9340014304080595,-0.7844834736631443,-0.56523532699620493,-0.29575813558693942,2.2204460492503131e-16,0.2957581355869392,0.56523532699620493,0.7844834736631443,0.93400143040805927,1,-1,-0.9039230039283328,-0.71618941421050597,-0.45862057964924374,-0.15774783927380909,0.15774783927380942,0.4586205796492433,0.71618941421050653,0.90392300392833169,1,-1.0000000000000004,-0.87988402041245672,-0.65073852599441051,-0.34488312271287414,2.2204460492503131e-16,0.34488312271287391,0.65073852599441051,0.87988402041245628,1,-0.99999999999999989,-0.85382070209978722,-0.57103752274935116,-0.20033546136011937,0.20033546136011937,0.57103752274935093,0.85382070209978789,0.99999999999999933,-1,-0.81706949643142879,-0.45741175337943896,2.2204460492503131e-16,0.45741175337943929,0.81706949643142868,1,-1,-0.75687614006542048,-0.28161624176456224,0.28161624176456268,0.75687614006542003,1,-1,-0.64955122615731642,4.4408920985006262e-16,0.64955122615731598,1,-1,-0.44261358688404373,0.44261358688404306,1,-0.999999999999999,4.2188474935755949e-15,1,-1,1.0000000000000067,-1;
            b << -1,-1,-1,-1,-1,-1,-1,-1,-1,-0.99999999999999989,-1,-0.93400143040805939,-0.90832684462285529,-0.8960431364598922,-0.89123812190023532,-0.88986404113259854,-0.88986404113259854,-0.89123812190023521,-0.8960431364598922,-0.90832684462285618,-0.93400143040805939,-0.78448347366314441,-0.73094144337958478,-0.70266274923405247,-0.68975123147782536,-0.68613038577762142,-0.68975123147782558,-0.70266274923405236,-0.73094144337958422,-0.7844834736631443,-0.56523532699620505,-0.48806130091019845,-0.44650772492108542,-0.42874260283457399,-0.42874260283457416,-0.44650772492108576,-0.48806130091019867,-0.56523532699620505,-0.2957581355869392,-0.20412896393866919,-0.15693480711118951,-0.14251479433085162,-0.15693480711118896,-0.20412896393866892,-0.29575813558693947,-2.7755575615628914e-16,0.093993005071267621,0.13625895639891117,0.13625895639891111,0.093993005071267788,2.7755575615628914e-16,0.29575813558693947,0.37929942281043405,0.40532549846810473,0.3792994228104335,0.2957581355869392,0.56523532699620493,0.62698457983947642,0.62698457983947686,0.56523532699620505,0.7844834736631443,0.81665368924571158,0.78448347366314419,0.9340014304080595,0.9340014304080595,1;
            expectedP << 0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746,0.70710678118654746;

            VectorX<double> P = Simplex2DP(a, b, i, j);
            BOOST_CHECK(P.isApprox(expectedP));

        }

        BOOST_AUTO_TEST_CASE(Simplex_2)
        {
            int i = 3;
            int j = 2;
            VectorX<double> a(66);
            VectorX<double> b(66);
            VectorX<double> expectedP(66);

            a << -1,-0.9340014304080595,-0.7844834736631443,-0.56523532699620493,-0.29575813558693942,2.2204460492503131e-16,0.2957581355869392,0.56523532699620493,0.7844834736631443,0.93400143040805927,1,-1,-0.9039230039283328,-0.71618941421050597,-0.45862057964924374,-0.15774783927380909,0.15774783927380942,0.4586205796492433,0.71618941421050653,0.90392300392833169,1,-1.0000000000000004,-0.87988402041245672,-0.65073852599441051,-0.34488312271287414,2.2204460492503131e-16,0.34488312271287391,0.65073852599441051,0.87988402041245628,1,-0.99999999999999989,-0.85382070209978722,-0.57103752274935116,-0.20033546136011937,0.20033546136011937,0.57103752274935093,0.85382070209978789,0.99999999999999933,-1,-0.81706949643142879,-0.45741175337943896,2.2204460492503131e-16,0.45741175337943929,0.81706949643142868,1,-1,-0.75687614006542048,-0.28161624176456224,0.28161624176456268,0.75687614006542003,1,-1,-0.64955122615731642,4.4408920985006262e-16,0.64955122615731598,1,-1,-0.44261358688404373,0.44261358688404306,1,-0.999999999999999,4.2188474935755949e-15,1,-1,1.0000000000000067,-1;
            b << -1,-1,-1,-1,-1,-1,-1,-1,-1,-0.99999999999999989,-1,-0.93400143040805939,-0.90832684462285529,-0.8960431364598922,-0.89123812190023532,-0.88986404113259854,-0.88986404113259854,-0.89123812190023521,-0.8960431364598922,-0.90832684462285618,-0.93400143040805939,-0.78448347366314441,-0.73094144337958478,-0.70266274923405247,-0.68975123147782536,-0.68613038577762142,-0.68975123147782558,-0.70266274923405236,-0.73094144337958422,-0.7844834736631443,-0.56523532699620505,-0.48806130091019845,-0.44650772492108542,-0.42874260283457399,-0.42874260283457416,-0.44650772492108576,-0.48806130091019867,-0.56523532699620505,-0.2957581355869392,-0.20412896393866919,-0.15693480711118951,-0.14251479433085162,-0.15693480711118896,-0.20412896393866892,-0.29575813558693947,-2.7755575615628914e-16,0.093993005071267621,0.13625895639891117,0.13625895639891111,0.093993005071267788,2.7755575615628914e-16,0.29575813558693947,0.37929942281043405,0.40532549846810473,0.3792994228104335,0.2957581355869392,0.56523532699620493,0.62698457983947642,0.62698457983947686,0.56523532699620505,0.7844834736631443,0.81665368924571158,0.78448347366314419,0.9340014304080595,0.9340014304080595,1;
            expectedP << -4.5825756949558416,-2.9143278417841145,-0.13853446706593461,1.8164598049806335,1.7366136529073219,-1.5263043145882799e-15,-1.7366136529073211,-1.8164598049806335,0.13853446706593461,2.9143278417841052,4.5825756949558416,-1.6571000185148597,-0.38826604355062011,0.066367041544620364,0.12989488681796921,0.057375509068556943,-0.057375509068557061,-0.12989488681796701,-0.066367041544619781,0.38826604355063066,1.6571000185148597,1.681276916061363,0.79135758664900668,-0.6153403960089745,-0.89295118001144902,7.1715148382183836e-16,0.89295118001144902,0.61534039600897428,-0.79135758664900391,-1.6812769160613594,1.6444415956772414,0.26808197510597731,-0.21868244403804443,-0.10562029066098119,0.10562029066098171,0.21868244403804588,-0.26808197510598042,-1.6444415956772358,-0.96828663004836946,-0.24177383506977279,0.92845157928044808,-7.213717806579591e-16,-0.92845157928044963,0.24177383506977257,0.9682866300483669,-2.7209043188800313,0.14255085161795647,0.99996112319794639,-0.99996112319794694,-0.1425508516179603,2.720904318880033,-2.2264993026505313,0.52947020467895256,-1.1316312587683043e-15,-0.52947020467895478,2.2264993026505326,-0.89603834613334765,0.28086277797666204,-0.2808627779766612,0.89603834613334687,-0.15447761642988875,-6.3030320742959133e-16,0.15447761642988989,-0.0054490328902924044,0.0054490328902926221,-0;

            VectorX<double> P = Simplex2DP(a, b, i, j);
            BOOST_CHECK(P.isApprox(expectedP));

        }

        BOOST_AUTO_TEST_CASE(Simplex_3)
        {
            int i = 10;
            int j = 10;
            VectorX<double> a(66);
            VectorX<double> b(66);
            VectorX<double> expectedP(66);

            a << -1,-0.9340014304080595,-0.7844834736631443,-0.56523532699620493,-0.29575813558693942,2.2204460492503131e-16,0.2957581355869392,0.56523532699620493,0.7844834736631443,0.93400143040805927,1,-1,-0.9039230039283328,-0.71618941421050597,-0.45862057964924374,-0.15774783927380909,0.15774783927380942,0.4586205796492433,0.71618941421050653,0.90392300392833169,1,-1.0000000000000004,-0.87988402041245672,-0.65073852599441051,-0.34488312271287414,2.2204460492503131e-16,0.34488312271287391,0.65073852599441051,0.87988402041245628,1,-0.99999999999999989,-0.85382070209978722,-0.57103752274935116,-0.20033546136011937,0.20033546136011937,0.57103752274935093,0.85382070209978789,0.99999999999999933,-1,-0.81706949643142879,-0.45741175337943896,2.2204460492503131e-16,0.45741175337943929,0.81706949643142868,1,-1,-0.75687614006542048,-0.28161624176456224,0.28161624176456268,0.75687614006542003,1,-1,-0.64955122615731642,4.4408920985006262e-16,0.64955122615731598,1,-1,-0.44261358688404373,0.44261358688404306,1,-0.999999999999999,4.2188474935755949e-15,1,-1,1.0000000000000067,-1;
            b << -1,-1,-1,-1,-1,-1,-1,-1,-1,-0.99999999999999989,-1,-0.93400143040805939,-0.90832684462285529,-0.8960431364598922,-0.89123812190023532,-0.88986404113259854,-0.88986404113259854,-0.89123812190023521,-0.8960431364598922,-0.90832684462285618,-0.93400143040805939,-0.78448347366314441,-0.73094144337958478,-0.70266274923405247,-0.68975123147782536,-0.68613038577762142,-0.68975123147782558,-0.70266274923405236,-0.73094144337958422,-0.7844834736631443,-0.56523532699620505,-0.48806130091019845,-0.44650772492108542,-0.42874260283457399,-0.42874260283457416,-0.44650772492108576,-0.48806130091019867,-0.56523532699620505,-0.2957581355869392,-0.20412896393866919,-0.15693480711118951,-0.14251479433085162,-0.15693480711118896,-0.20412896393866892,-0.29575813558693947,-2.7755575615628914e-16,0.093993005071267621,0.13625895639891117,0.13625895639891111,0.093993005071267788,2.7755575615628914e-16,0.29575813558693947,0.37929942281043405,0.40532549846810473,0.3792994228104335,0.2957581355869392,0.56523532699620493,0.62698457983947642,0.62698457983947686,0.56523532699620505,0.7844834736631443,0.81665368924571158,0.78448347366314419,0.9340014304080595,0.9340014304080595,1;
            expectedP << 14.849242404917472,-6.0477434501119758,4.6281238163909348,-4.0202679162248192,3.7382942137532784,-3.6543057480851533,3.7382942137532797,-4.0202679162248192,4.6281238163909348,-6.0477434501118932,14.849242404917472,4.2537648087368867,-0.94001624668457207,0.19952443725103763,-0.038267878911089258,0.0063064412868570601,0.0063064412868572978,-0.038267878911086774,0.1995244372510408,-0.94001624668458461,4.2537648087368867,1.10539416672691,-0.4032785632810672,-0.24806869315693914,0.26443318957977702,-0.22765779645004028,0.26443318957978112,-0.24806869315693811,-0.40327856328105433,1.1053941667268934,-2.2337013202062517,0.21493749123792846,-0.95806713976717395,0.4188544315576776,0.41885443155767826,-0.95806713976717517,0.21493749123791564,-2.2337013202061864,-3.5415642770599729,-0.32770363573883671,-0.12020044970693751,-0.60199228514762637,-0.12020044970694138,-0.32770363573883332,-3.5415642770599685,1.2085854948094354,-1.1647175000092069,-1.2109522679638625,-1.2109522679638627,-1.1647175000092036,1.2085854948094017,3.4476725566234676,-0.81630702555046941,-1.8026437787395675,-0.81630702555047996,3.4476725566234525,2.9659335131966524,-0.035937179812260862,-0.035937179812258017,2.9659335131966471,0.024717070155542302,-0.0015996043703693991,0.024717070155543731,6.1567755082554687e-07,6.1567755082577282e-07,0;

            VectorX<double> P = Simplex2DP(a, b, i, j);
            BOOST_CHECK(P.isApprox(expectedP));

        }

    BOOST_AUTO_TEST_SUITE_END()
BOOST_AUTO_TEST_SUITE_END()